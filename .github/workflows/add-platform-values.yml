name: Add Platform Values

on:
  repository_dispatch:

jobs:
  add-values:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      pages: write
      id-token: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Parse payload
        id: parse-payload
        run: |
          action=$(echo '${{ github.event.client_payload.action }}' | jq -r '.')
          teamName=$(echo '${{ github.event.client_payload.teamName }}' | jq -r '.')
          teamOwner=$(echo '${{ github.event.client_payload.teamOwner }}' | jq -r '.')
          teamOwnerEmail=$(echo '${{ github.event.client_payload.teamOwnerEmail }}' | jq -r '.')
          cmdbTeamName=$(echo '${{ github.event.client_payload.cmdbTeamName }}' | jq -r '.')
          businessGroup=$(echo '${{ github.event.client_payload.businessGroup }}' | jq -r '.')
          timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          
          echo "action=$action" >> $GITHUB_OUTPUT
          echo "teamName=$teamName" >> $GITHUB_OUTPUT
          echo "teamOwner=$teamOwner" >> $GITHUB_OUTPUT
          echo "teamOwnerEmail=$teamOwnerEmail" >> $GITHUB_OUTPUT
          echo "cmdbTeamName=$cmdbTeamName" >> $GITHUB_OUTPUT
          echo "businessGroup=$businessGroup" >> $GITHUB_OUTPUT
          echo "timestamp=$timestamp" >> $GITHUB_OUTPUT
          
      - name: Validate payload
        run: |
          if [ -z "${{ steps.parse-payload.outputs.action }}" ]; then
            echo "Error: action is required"
            exit 1
          fi
          
          # Validate action type
          case "${{ steps.parse-payload.outputs.action }}" in
            "add-team"|"add-business-group")
              echo "Valid action: ${{ steps.parse-payload.outputs.action }}"
              ;;
            *)
              echo "Error: Invalid action. Must be: add-team or add-business-group"
              exit 1
              ;;
          esac
          
          # Validate required fields based on action
          if [ "${{ steps.parse-payload.outputs.action }}" = "add-team" ]; then
            if [ -z "${{ steps.parse-payload.outputs.teamName }}" ] || [ -z "${{ steps.parse-payload.outputs.teamOwner }}" ] || [ -z "${{ steps.parse-payload.outputs.teamOwnerEmail }}" ]; then
              echo "Error: teamName, teamOwner, and teamOwnerEmail are required for add-team"
              exit 1
            fi
          elif [ "${{ steps.parse-payload.outputs.action }}" = "add-cmdb-assignment-group" ]; then
            if [ -z "${{ steps.parse-payload.outputs.cmdbAssignmentGroup }}" ]; then
              echo "Error: cmdbAssignmentGroup is required for add-cmdb-assignment-group"
              exit 1
            fi
          elif [ "${{ steps.parse-payload.outputs.action }}" = "add-business-group" ]; then
            if [ -z "${{ steps.parse-payload.outputs.businessGroup }}" ]; then
              echo "Error: businessGroup is required for add-business-group"
              exit 1
            fi
          fi
          
      - name: Load current values
        id: load-values
        run: |
          values_file="docs/valid-platform-values.json"
          current_data=$(cat "$values_file")
          
          # Check if value already exists based on action
          if [ "${{ steps.parse-payload.outputs.action }}" = "add-team" ]; then
            team_name='${{ steps.parse-payload.outputs.teamName }}'
            if echo "$current_data" | jq -e --arg team "$team_name" '.validTeamNames[] | select(.name == $team)' > /dev/null; then
              echo "Error: Team '$team_name' already exists"
              exit 1
            fi
            
            # Check if CMDB assignment group exists and add it if not
            cmdb_team_name='${{ steps.parse-payload.outputs.cmdbTeamName }}'
            if [ -n "$cmdb_team_name" ] && [ "$cmdb_team_name" != "null" ]; then
              if ! echo "$current_data" | jq -e --arg group "$cmdb_team_name" '.validCmdbAssignmentGroups | contains([$group])' > /dev/null; then
                echo "Will add CMDB Assignment Group '$cmdb_team_name' automatically"
              fi
            fi
          elif [ "${{ steps.parse-payload.outputs.action }}" = "add-business-group" ]; then
            business_group='${{ steps.parse-payload.outputs.businessGroup }}'
            if echo "$current_data" | jq -e --arg group "$business_group" '.validBusinessGroups | contains([$group])' > /dev/null; then
              echo "Error: Business Group '$business_group' already exists"
              exit 1
            fi
          fi
          
      - name: Add new value
        run: |
          values_file="docs/valid-platform-values.json"
          current_data=$(cat "$values_file")
          
          # Add the new value based on action
          if [ "${{ steps.parse-payload.outputs.action }}" = "add-team" ]; then
            # Create team object
            team_object=$(jq -n --arg name '${{ steps.parse-payload.outputs.teamName }}' --arg owner '${{ steps.parse-payload.outputs.teamOwner }}' --arg email '${{ steps.parse-payload.outputs.teamOwnerEmail }}' '{name: $name, owner: $owner, ownerEmail: $email}')
            updated_data=$(echo "$current_data" | jq --argjson team "$team_object" '.validTeamNames += [$team]')
            echo "Added team '${{ steps.parse-payload.outputs.teamName }}' with owner '${{ steps.parse-payload.outputs.teamOwner }}'"
            
            # Automatically add CMDB assignment group if provided
            cmdb_team_name='${{ steps.parse-payload.outputs.cmdbTeamName }}'
            if [ -n "$cmdb_team_name" ] && [ "$cmdb_team_name" != "null" ]; then
              if ! echo "$updated_data" | jq -e --arg group "$cmdb_team_name" '.validCmdbAssignmentGroups | contains([$group])' > /dev/null; then
                updated_data=$(echo "$updated_data" | jq --arg group "$cmdb_team_name" '.validCmdbAssignmentGroups += [$group]')
                echo "Automatically added CMDB Assignment Group '$cmdb_team_name'"
              fi
            fi
          elif [ "${{ steps.parse-payload.outputs.action }}" = "add-business-group" ]; then
            updated_data=$(echo "$current_data" | jq --arg group '${{ steps.parse-payload.outputs.businessGroup }}' '.validBusinessGroups += [$group]')
            echo "Added Business Group '${{ steps.parse-payload.outputs.businessGroup }}'"
          fi
          
          # Save updated file
          echo "$updated_data" | jq '.' > "$values_file"
          
          # Create team API file if adding a team
          if [ "${{ steps.parse-payload.outputs.action }}" = "add-team" ]; then
            team_name='${{ steps.parse-payload.outputs.teamName }}'
            file_name="docs/$(echo "$team_name" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')-mule-apis.json"
            
            cat > "$file_name" << EOF
          {
            "teamName": "$team_name",
            "apis": []
          }
          EOF
            echo "Created team API file: $file_name"
          fi
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          
          if [ "${{ steps.parse-payload.outputs.action }}" = "add-team" ]; then
            commit_msg="Add Team: ${{ steps.parse-payload.outputs.teamName }} with owner ${{ steps.parse-payload.outputs.teamOwner }}"
          elif [ "${{ steps.parse-payload.outputs.action }}" = "add-business-group" ]; then
            commit_msg="Add Business Group: ${{ steps.parse-payload.outputs.businessGroup }}"
          fi
          
          git commit -m "$commit_msg"
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.parse-payload.outputs.action == 'add-team' && 'Add Team' || 'Add Business Group' }}: ${{ steps.parse-payload.outputs.teamName || steps.parse-payload.outputs.businessGroup }}"
          body: |
            ## Add Platform Value
            
            **Action:** ${{ steps.parse-payload.outputs.action }}
            **Timestamp:** ${{ steps.parse-payload.outputs.timestamp }}
            
            This PR was automatically created to add a new value to the platform configuration.
            
            ### Changes Made:
            ${{ steps.parse-payload.outputs.action == 'add-team' && format('Added team `{0}` with owner `{1}` and email `{2}`', steps.parse-payload.outputs.teamName, steps.parse-payload.outputs.teamOwner, steps.parse-payload.outputs.teamOwnerEmail) || format('Added Business Group `{0}`', steps.parse-payload.outputs.businessGroup) }}
            - Updated `docs/valid-platform-values.json`
            ${{ steps.parse-payload.outputs.action == 'add-team' && '- Created team API file' || '' }}
            ${{ steps.parse-payload.outputs.action == 'add-team' && steps.parse-payload.outputs.cmdbTeamName && steps.parse-payload.outputs.cmdbTeamName != 'null' && '- Automatically added CMDB Assignment Group' || '' }}
            
            Please review and merge if the addition looks correct.
            
          branch: add-platform-value-${{ github.run_id }}
          delete-branch: true
          labels: platform-values, add, automated 